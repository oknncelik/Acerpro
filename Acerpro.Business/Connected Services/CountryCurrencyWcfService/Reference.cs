//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Acerpro.Business.CountryCurrencyWcfService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfArrayOfCountryCurrencyDtoNGKS6tMi", Namespace="http://schemas.datacontract.org/2004/07/Acerpro.Wcf")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfArrayOfCountryCurrencyDtoNGKS6tMi : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Acerpro.Entities.Concreate.Dtos.CountryCurrencyDto[] ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Acerpro.Entities.Concreate.Dtos.CountryCurrencyDto[] Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultType {
            get {
                return this.ResultTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultTypeField, value) != true)) {
                    this.ResultTypeField = value;
                    this.RaisePropertyChanged("ResultType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfCountryCurrencyDtoNGKS6tMi", Namespace="http://schemas.datacontract.org/2004/07/Acerpro.Wcf")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfCountryCurrencyDtoNGKS6tMi : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Acerpro.Entities.Concreate.Dtos.CountryCurrencyDto ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Acerpro.Entities.Concreate.Dtos.CountryCurrencyDto Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultType {
            get {
                return this.ResultTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultTypeField, value) != true)) {
                    this.ResultTypeField = value;
                    this.RaisePropertyChanged("ResultType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfArrayOfCountryCodeAndNameDtoJLzdrnDW", Namespace="http://schemas.datacontract.org/2004/07/Acerpro.Wcf")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfArrayOfCountryCodeAndNameDtoJLzdrnDW : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Acerpro.Entities.Concreate.Dtos.ServiceDtos.CountryCodeAndNameDto[] ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Acerpro.Entities.Concreate.Dtos.ServiceDtos.CountryCodeAndNameDto[] Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultType {
            get {
                return this.ResultTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultTypeField, value) != true)) {
                    this.ResultTypeField = value;
                    this.RaisePropertyChanged("ResultType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfCurrencyDtoJLzdrnDW", Namespace="http://schemas.datacontract.org/2004/07/Acerpro.Wcf")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfCurrencyDtoJLzdrnDW : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Acerpro.Entities.Concreate.Dtos.ServiceDtos.CurrencyDto ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Acerpro.Entities.Concreate.Dtos.ServiceDtos.CurrencyDto Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultType {
            get {
                return this.ResultTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultTypeField, value) != true)) {
                    this.ResultTypeField = value;
                    this.RaisePropertyChanged("ResultType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfstring", Namespace="http://schemas.datacontract.org/2004/07/Acerpro.Wcf")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfstring : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultType {
            get {
                return this.ResultTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultTypeField, value) != true)) {
                    this.ResultTypeField = value;
                    this.RaisePropertyChanged("ResultType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CountryCurrencyWcfService.ICountryCurrency")]
    public interface ICountryCurrency {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/Get", ReplyAction="http://tempuri.org/ICountryCurrency/GetResponse")]
        Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfArrayOfCountryCurrencyDtoNGKS6tMi Get();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/Get", ReplyAction="http://tempuri.org/ICountryCurrency/GetResponse")]
        System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfArrayOfCountryCurrencyDtoNGKS6tMi> GetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/GetById", ReplyAction="http://tempuri.org/ICountryCurrency/GetByIdResponse")]
        Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfCountryCurrencyDtoNGKS6tMi GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/GetById", ReplyAction="http://tempuri.org/ICountryCurrency/GetByIdResponse")]
        System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfCountryCurrencyDtoNGKS6tMi> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/Save", ReplyAction="http://tempuri.org/ICountryCurrency/SaveResponse")]
        Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfCountryCurrencyDtoNGKS6tMi Save(Acerpro.Entities.Concreate.Dtos.CountryCurrencyCreateDto createDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/Save", ReplyAction="http://tempuri.org/ICountryCurrency/SaveResponse")]
        System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfCountryCurrencyDtoNGKS6tMi> SaveAsync(Acerpro.Entities.Concreate.Dtos.CountryCurrencyCreateDto createDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/Update", ReplyAction="http://tempuri.org/ICountryCurrency/UpdateResponse")]
        Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfCountryCurrencyDtoNGKS6tMi Update(Acerpro.Entities.Concreate.Dtos.CountryCurrencyDto updateDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/Update", ReplyAction="http://tempuri.org/ICountryCurrency/UpdateResponse")]
        System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfCountryCurrencyDtoNGKS6tMi> UpdateAsync(Acerpro.Entities.Concreate.Dtos.CountryCurrencyDto updateDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/GetCountryList", ReplyAction="http://tempuri.org/ICountryCurrency/GetCountryListResponse")]
        Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfArrayOfCountryCodeAndNameDtoJLzdrnDW GetCountryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/GetCountryList", ReplyAction="http://tempuri.org/ICountryCurrency/GetCountryListResponse")]
        System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfArrayOfCountryCodeAndNameDtoJLzdrnDW> GetCountryListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/CountryCurrency", ReplyAction="http://tempuri.org/ICountryCurrency/CountryCurrencyResponse")]
        Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfCurrencyDtoJLzdrnDW CountryCurrency(string countryIsoCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/CountryCurrency", ReplyAction="http://tempuri.org/ICountryCurrency/CountryCurrencyResponse")]
        System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfCurrencyDtoJLzdrnDW> CountryCurrencyAsync(string countryIsoCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/CapitalCity", ReplyAction="http://tempuri.org/ICountryCurrency/CapitalCityResponse")]
        Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfstring CapitalCity(string countryIsoCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/CapitalCity", ReplyAction="http://tempuri.org/ICountryCurrency/CapitalCityResponse")]
        System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfstring> CapitalCityAsync(string countryIsoCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/CountryIsoCode", ReplyAction="http://tempuri.org/ICountryCurrency/CountryIsoCodeResponse")]
        Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfstring CountryIsoCode(string countryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/CountryIsoCode", ReplyAction="http://tempuri.org/ICountryCurrency/CountryIsoCodeResponse")]
        System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfstring> CountryIsoCodeAsync(string countryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/GetCountryCurrencyList", ReplyAction="http://tempuri.org/ICountryCurrency/GetCountryCurrencyListResponse")]
        Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfArrayOfCountryCurrencyDtoNGKS6tMi GetCountryCurrencyList(string isoCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryCurrency/GetCountryCurrencyList", ReplyAction="http://tempuri.org/ICountryCurrency/GetCountryCurrencyListResponse")]
        System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfArrayOfCountryCurrencyDtoNGKS6tMi> GetCountryCurrencyListAsync(string isoCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICountryCurrencyChannel : Acerpro.Business.CountryCurrencyWcfService.ICountryCurrency, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CountryCurrencyClient : System.ServiceModel.ClientBase<Acerpro.Business.CountryCurrencyWcfService.ICountryCurrency>, Acerpro.Business.CountryCurrencyWcfService.ICountryCurrency {
        
        public CountryCurrencyClient() {
        }
        
        public CountryCurrencyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CountryCurrencyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CountryCurrencyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CountryCurrencyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfArrayOfCountryCurrencyDtoNGKS6tMi Get() {
            return base.Channel.Get();
        }
        
        public System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfArrayOfCountryCurrencyDtoNGKS6tMi> GetAsync() {
            return base.Channel.GetAsync();
        }
        
        public Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfCountryCurrencyDtoNGKS6tMi GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfCountryCurrencyDtoNGKS6tMi> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfCountryCurrencyDtoNGKS6tMi Save(Acerpro.Entities.Concreate.Dtos.CountryCurrencyCreateDto createDto) {
            return base.Channel.Save(createDto);
        }
        
        public System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfCountryCurrencyDtoNGKS6tMi> SaveAsync(Acerpro.Entities.Concreate.Dtos.CountryCurrencyCreateDto createDto) {
            return base.Channel.SaveAsync(createDto);
        }
        
        public Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfCountryCurrencyDtoNGKS6tMi Update(Acerpro.Entities.Concreate.Dtos.CountryCurrencyDto updateDto) {
            return base.Channel.Update(updateDto);
        }
        
        public System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfCountryCurrencyDtoNGKS6tMi> UpdateAsync(Acerpro.Entities.Concreate.Dtos.CountryCurrencyDto updateDto) {
            return base.Channel.UpdateAsync(updateDto);
        }
        
        public Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfArrayOfCountryCodeAndNameDtoJLzdrnDW GetCountryList() {
            return base.Channel.GetCountryList();
        }
        
        public System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfArrayOfCountryCodeAndNameDtoJLzdrnDW> GetCountryListAsync() {
            return base.Channel.GetCountryListAsync();
        }
        
        public Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfCurrencyDtoJLzdrnDW CountryCurrency(string countryIsoCode) {
            return base.Channel.CountryCurrency(countryIsoCode);
        }
        
        public System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfCurrencyDtoJLzdrnDW> CountryCurrencyAsync(string countryIsoCode) {
            return base.Channel.CountryCurrencyAsync(countryIsoCode);
        }
        
        public Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfstring CapitalCity(string countryIsoCode) {
            return base.Channel.CapitalCity(countryIsoCode);
        }
        
        public System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfstring> CapitalCityAsync(string countryIsoCode) {
            return base.Channel.CapitalCityAsync(countryIsoCode);
        }
        
        public Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfstring CountryIsoCode(string countryName) {
            return base.Channel.CountryIsoCode(countryName);
        }
        
        public System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfstring> CountryIsoCodeAsync(string countryName) {
            return base.Channel.CountryIsoCodeAsync(countryName);
        }
        
        public Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfArrayOfCountryCurrencyDtoNGKS6tMi GetCountryCurrencyList(string isoCode) {
            return base.Channel.GetCountryCurrencyList(isoCode);
        }
        
        public System.Threading.Tasks.Task<Acerpro.Business.CountryCurrencyWcfService.ServiceResultOfArrayOfCountryCurrencyDtoNGKS6tMi> GetCountryCurrencyListAsync(string isoCode) {
            return base.Channel.GetCountryCurrencyListAsync(isoCode);
        }
    }
}
